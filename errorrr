# Cell B: system and PyTorch info (run in Python cell)
import shutil, subprocess, sys, torch, os
print("Python:", sys.executable)
print("torch.__version__:", torch.__version__)
print("torch.version.cuda:", torch.version.cuda)
print("CUDA available in torch?:", torch.cuda.is_available())
print("torch.cuda.device_count():", torch.cuda.device_count())
print("CUDA_HOME / CUDA_PATH env:", os.getenv("CUDA_HOME"), os.getenv("CUDA_PATH"))

def which(cmd):
    p = shutil.which(cmd)
    return p if p else "<not found>"

print("nvcc:", which("nvcc"))
print("gcc:", which("gcc"))
print("g++:", which("g++"))

# print nvcc version if available
if which("nvcc") != "<not found>":
    try:
        print("nvcc --version:")
        print(subprocess.check_output(["nvcc", "--version"], stderr=subprocess.STDOUT).decode())
    except Exception as e:
        print("nvcc --version failed:", e)



Python: /home/work/dcvc/miniconda3/envs/dcvc_env/bin/python
torch.__version__: 2.8.0+cu126
torch.version.cuda: 12.6
CUDA available in torch?: True
torch.cuda.device_count(): 2
CUDA_HOME / CUDA_PATH env: /usr/local/cuda None
nvcc: /usr/local/cuda/bin/nvcc
gcc: /usr/bin/gcc
g++: /usr/bin/g++
nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2023 NVIDIA Corporation
Built on Tue_Jul_11_02:20:44_PDT_2023
Cuda compilation tools, release 12.2, V12.2.128
Build cuda_12.2.r12.2/compiler.33053471_0
