# Cell A: repo search for native extension sources
import os, glob, textwrap
root = os.getcwd()
print("Repo root:", root)

# look for likely extension package names
candidates = []
for d, _, files in os.walk(root):
    for fname in files:
        if fname.endswith(('.cpp', '.cxx', '.cc', '.cu', 'CMakeLists.txt', 'setup.py', 'pyproject.toml')):
            candidates.append(d)
            break

candidates = sorted(set(candidates))
print(f"Found {len(candidates)} directories containing native build artifacts (first 40):")
for p in candidates[:40]:
    print(" -", os.path.relpath(p, root))
print()

# Also search for MLCodec_extensions_cpp literal
matches = glob.glob("**/MLCodec_extensions_cpp*", recursive=True)
print("Paths matching 'MLCodec_extensions_cpp*':", matches)

# show top-level listing for quick inspection
print("\nTop-level files/dirs:")
print(sorted(os.listdir(root)))
